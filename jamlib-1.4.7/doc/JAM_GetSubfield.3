.\" $Id: JAM_GetSubfield.3,v 1.1 2002/11/09 00:37:16 raorn Exp $
.\"
.TH JAM_GetSubfield 3 2002-11-07 "" "JAM subroutine library"
.SH NAME
JAM_GetSubfield \- Get a subfield from a subfield packet (not reentrant)
.SH SYNOPSIS
.nf
.B #include <jamlib/jam.h>

.BI "s_JamSubfield* JAM_GetSubfield(s_JamSubPacket* " SubPack_PS ");"
.RE
.fi
.SH DESCRIPTION
Returns a pointer to the first/next subfield struct in the subfield packet.
.SS Arguments
.TP
.I SubPack_PS
The subfield packet to use. If this parameter is NULL, the next subfield from
the subfield packet previously scanned will be returned.
.SH "RETURN VALUE"
A pointer to a subfield, if successful, or NULL if there are no
more subfields in the packet.
.SH EXAMPLES
.nf
s_JamSubPacket* SubPack_PS;
s_JamSubfield*  Subfield_PS;
s_JamMsgHeader  Header_S;
int             Result_I;

Result_I = JAM_ReadMsgHeader(0, &Header_S, &SubPack_PS);
if (Result_I)
  printf("JAM_ReadMsgHeader returned %d.\\n", Result_I);

for (Subfield_PS = JAM_GetSubfield(SubPack_PS); Subfield_PS;
      Subfield_PS = JAM_GetSubfield(NULL))
  printf("Subfield id %d\\n", Subfield_PS\->LoID);

JAM_DelSubPacket(SubPack_PS);
.fi
.SH BUGS
This function is not reentrant and should not be used in
multi\-threaded applications unless you know what you are doing.
.PP	  
Use
.BR JAM_GetSubfield_R (3)
instead when a reentrant function is needed.
.SH AUTHOR
This manual page was created by Sir Raorn <raorn@altlinux.ru>,
based on original JAMlib documentation by Bjorn Stenberg
<bjorn@haxx.nu> and Johan Billing <billing@df.lth.se>.
.SH SEE ALSO
.BR jamlib (3),
.BR JAM_GetSubfield_R (3),
.BR JAM_PutSubfield (3),
.BR JAM_NewSubPacket (3),
.BR JAM_DelSubPacket (3)
.\" vim: ft=nroff
