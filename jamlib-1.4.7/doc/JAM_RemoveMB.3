.\" $Id: JAM_RemoveMB.3,v 1.1 2002/11/09 00:37:16 raorn Exp $
.\"
.TH JAM_RemoveMB 3 2002-11-07 "" "JAM subroutine library"
.SH NAME
JAM_RemoveMB \- Remove a message base
.SH SYNOPSIS
.nf
.B #include <jamlib/jam.h>

.BI "int JAM_RemoveMB(s_JamBase* " ErrorBase_PS ", uchar* " Basename_PC ");"
.RE
.fi
.SH DESCRIPTION
Deletes all files associated with a message base. No checking is
done as to whether the message base is currently open or not.
.SS Arguments
.TP
.I ErrorBase_PS
The message base in which to store the I/O error, if any. This parameter does
\fBNOT\fP specify the message to be removed, it is only used for error tracking
purposes. If an I/O error occurs when removing the message base files, this
message base handler will simply hold the error code.
.TP
.I Basename_PC
The path and base filename of the message base to remove.
.SH RETURN VALUE
.TP
.B 0
if successful
.TP
.B JAM_IO_ERROR
if an I/O error occured. See
.BR JAM_Errno (3)
.TP
.B JAM_BAD_PARAM
if \fIErrorBase_PS\fP is NULL
.SH EXAMPLES
.nf
int        Result_I;

Result_I = JAM_RemoveMB(Base_PS, "/some/where/mynase");
if (Result_I) {
  printf("JAM_RemoveMB returned %d.\n", Result_I);
  if (Result_I == JAM_IO_ERROR)
    printf("I/O error %d\\n", JAM_Errno(ErrorBase_PS));
}
.fi
.SH AUTHOR
This manual page was created by Sir Raorn <raorn@altlinux.ru>,
based on original JAMlib documentation by Bjorn Stenberg
<bjorn@haxx.nu> and Johan Billing <billing@df.lth.se>.
.SH SEE ALSO
.BR jamlib (3),
.BR JAM_CreateMB (3),
.BR JAM_Errno (3)
.\" vim: ft=nroff
